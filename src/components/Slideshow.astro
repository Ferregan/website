---
interface Props {
  interval?: number,
}

const { interval = 1000 } = Astro.props;

---

<div class="h-full slideshow" data-interval={interval}>
  <slot />
</div>

<script>
  const prefersReducedMotion = window.matchMedia("(prefers-reduced-motion: reduce)").matches;

  // dont show slideshows for users who prefer calm
  const slideshows = prefersReducedMotion
    ? []
    : document.querySelectorAll(".slideshow");

  for (const container of slideshows) {
    // markdown parser adds <p> tags inside elements, so we want the p tag
    const imageContainer = container.children[0];
    imageContainer.classList.add("grid", "grid-cols-1", "grid-rows-1");

    for (const e of imageContainer.children) {
      e.classList.add("row-start-1", "col-start-1")
    }

    const interval = parseInt(container.getAttribute("data-interval")!);

    const numChildren = imageContainer.children.length;
    let currentChild = 0;

    imageContainer.children[currentChild].classList.toggle("z-10");

    setInterval(() => {
      const prevChild = currentChild;
      imageContainer.children[prevChild].classList.toggle("z-10");
      currentChild = (prevChild + 1) % numChildren;
      imageContainer.children[currentChild].classList.toggle("z-10");
    }, interval);
  }
</script>
